웹프로젝트

1. 프로젝트 생성 : Intellij.

2. Build.Gradle : 의존설정.
  - Spring( Core, Context, Webmvc, Test, Jdbc ), Log, Lomnok, Jstl, Fileupload, DB.

3. Spring 관련 설정.
  - 설정파일 생성 : /WEB-INF/spring

                 + Root-context.xml, 
                      : Spring 기본설정, DB 설정.

                 + Servlet-context.xml.
                      : MVC 관련설정 -> 어노테이션 설정, 리소스(정적자원들) 설정, view 설정.
                      : 
  - Web.xml : 
        + Spring 설정파일을 등록 : root-context.xml.
        + Servlet 등록( Mapping : "/" ) : servlet-context.xml

  - log4j2 설정 : log4j2.xml 설정.

-----------------------------------------------------------------------------------------------------------------------

웹화면 + 처리.

- Controller : @Controller, @RequestMapping.
- View( JSP ).
- Model : Service, DAO.

-----------------------------------------------------------------------------------------------------------------------

사용자가 입력하는 데이터 받기.

- encoding filter 등록 : web.xml .
  org.springframework.web.filter.CharacterEncodingFilter .

-- 사용자 입력 파라미터 받기.

	1. 매개변수에 변수를 정의 : 변수의 이름은 파라미터의 이름으로 정의.

	2. @RequestParam() : 필수항목, 기본값을 정의할 수 있고, 매개변수의 이름을 다르게 정의 가능.

	3. HttpServletRequest : getParameter() 메소드 이용.
	4. Beans 이용.

               : 커멘드 객체라고 하며, 클래스 내부의 변수의 이름은 파라미터 이름과 일치 시켜준다.
	   : 클래스의 정의 방식은 Java Beans 형식을 따름. (private, 기본생성자, getter/setter).




