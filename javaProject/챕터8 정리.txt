챕터8 정리.

추상클래스 -> 추상메소드를 포함하는 클래스.
abstract class                   추상 -> 미완성.

추상클래스 - 미완성클래스 -> 인스턴스생성X.
가이드.
반드시 상속해서 구현해야함. (미완성된 메소드를)
반드시 추상메소드를 오버라이딩 해야함.
extends (-----)
abstract { }X / ;

추상클래스의 목적.
클래스 생성시 작성해야 하는 작성가이드의 역할.
선언부 이미 정의 -> 구현부의 재정의.


인터페이스.
추상클래스의 추상화 정도가 더한것.
ㄴ> 미완성 정도가 더 강함. 
자바에서는 다중상속을 지원X. -> 일반클래스와 다른 방법으로 상속을 하기 때문에 다중상속을 하는 것처럼 사용 가능.
Class ______ estends ________
               implements _________
표준약속,규약을 제공. 
다른 클래스 사이의 매개체 역할.
다형성.       인터페이스타입 ____ = 하위타입의 클래스.
인터페이스도 클래스다. (이름만 인터페이스로 생각. 내부적으로 처리되는? 기능은 클래스와 같다.

인터페이스 특징.
클래스 -> 추상클래스.
인스턴스 생성불가.
다형성의 사용가능.
상수와 추상메소드만 정의.
Class 대신 interface 키워드 사용.
하위클래스에서 interface를 상속 할때는 implements 키워드를 사용.
추상메소드 구현.

인터페이스 정의.
모든 변수는 public static final 로 정의 / 모든 메소드는 public abstract 로 정의.
enum  열거형 상수표현.
싱글톤 처리.
-> 생성자 제한 printe.
-> 인스턴스 생성X.
-> 인스턴스 생성.
  static private.     new _____( );
-> 외부에서 요청시.
  static public.     참조변수 반환 메소드.

상수만드는 방법.
public Static.  final 
                    -> 상수키워드.

인스턴스.
-> 클래스멤버.    특정목적의 클래스 구성.

extends 상위클래스 implements 인터페이스 {---, ---, ---, ---}
            클래스 - 추상클래스


인터페이스 간의 상속.
Class _______  implements Compoureable

인터페이스의 사용목적.
클래스의 표준화가 가능해짐.
표준화에 따른 개발 시간의 단축이 목적.
대규모 프로젝트의 경우 일관된 형태를 유지하도록 표준화가 필요.
각 클래스마다 독립적인 작업과 동시작업이 가능해서 개발시간이 단축.
확장성과 유지보수에 매우 효과적.

인터페이스와 다형성.
인터페이스 구현도 클래스의 상속과 같은 특징을 가짐.
인터페이스를 구현하는 클래스도 구현하는 인터페이스가 상위 클래스처럼 사용되어 
인터페이스 타입의 참조변수가 인터페이스를 구현하는 클래스의 인스턴스를 참조할수 있음.